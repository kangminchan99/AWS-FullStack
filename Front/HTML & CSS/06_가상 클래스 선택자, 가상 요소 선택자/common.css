/* *: 전체 선택자 */
* {
  /* 바깥 여백 */
  margin: 0;
  /* 안쪽 여백 */
  padding: 0;
}

/* link가 걸린 a를 의미 */
/* 가상 클래스 10점 */
/* 밑줄 빼기 */
/* a:link {
  color: red;

  text-decoration: none;
} */

/* 방문하고 왔을 경우 */
/* a:visited {
  color: grey;
} */

/* 마우스를 올렸을 경우 */
/* a:hover {
  text-decoration: underline;
} */

/* 클릭이 아니며 클릭 동작은 자스로 처리 */
/* a:active {
  color: blue;
} */

/* 일반 사이트에서 a초기화 */
a {
  text-decoration: none;
  color: #000;
}

#wrap {
  height: 1500px;
}

/* li:first-child -> li태그의 형제 요소 중 첫번째 요소만 선택 */
/* #header .list li:first-child {
  border: 1px solid blue;
} */

/* 형제 중 n번째 요소 선택 */
/* #header .list li:nth-child(3) {
  border: 3px solid blue;
} */

/* 형제 중 짝수 선택 */
/* #header .list li:nth-child(even) {
  border: 3px solid blue;
} */

/* 홀수  */
/* #header .list li:nth-child(odd) {
  border: 3px solid red;
} */

/* 1, 4, 7번째 선택 */
/* n은 0부터 시작, child는 1부터 */
/* #header .list li:nth-child(3n + 1) {
  border: 3px solid red;
} */

/*  */
/* #header .list li:last-child {
  border: 3px solid red;
} */

/* li:not(:last-child) -> li중 마지막 요소가 아닌 li선택 */
#header .list li:not(:last-child) {
  border: 3px solid blue;
}

/*  #header .list li[class^='item'] -> id 헤더의 class 리스트의 모든 자식인 li중 class이름에 item으로 시작하는 것만 */
/* #header .list li[class^='item'] {
  background: red;
} */

/* (*=) -> 클래스 이름에서 item이 들어가 있는 */
#header .list li[class*='item'] {
  background: red;
}

/* 같은 클래스에 포함된 두개의 클래스므로 붙여서 작성 */
#header .list .box.item2 {
  color: dodgerblue;
}

#header .list .box {
  color: #fff;
}

/* container id는 특별한 경우가 아니면 적지않음 */
.main_etc {
  border: 5px solid black;
  height: 400px;
}

.main_etc h2 {
  text-align: center;
  font-size: 80px;
  position: relative;
}

/* 가상요소 선택자: 꾸밀 때 사용 */
/* h2::before -> h2의 앞에 content추가 */
.main_etc h2::after {
  content: '';
  position: absolute;
  left: 50%;
  bottom: -20px;
  transform: translateX(-50%);
  width: 100px;
  height: 5px;
  background: red;
}
